library(org.Mm.eg.db)
library(TimiRGeN)

data("mm_miR")
data("mm_mRNA")

MAE <- startObject(mm_miR, mm_mRNA)
MAE <- getIdsMir(MAE = MAE, assay(MAE, 1), orgDB = org.Mm.eg.db, miRPrefix = 'mmu')
MAE <- getIdsMrna(MAE = MAE, assay(MAE, 2), mirror = 'useast', species = 'mmusculus', orgDB = org.Mm.eg.db)

MAE <- combineGenes(MAE = MAE, miR_data = assay(MAE, 1),
                    assay(MAE, 2))
MAE <- genesList(MAE = MAE, method = 'c',
                 genetic_data = assay(MAE, 9),
                 timeString = "D")
MAE <- significantVals(MAE = MAE, method = 'c',
                       geneList =metadata(MAE)[[1]],
                       maxVal = 0.05, stringVal = "adjPVal")
MAE <- addIds(MAE = MAE, method = 'c',
              filtered_genelist = metadata(MAE)[[2]],
              miR_IDs = assay(MAE, 3),
              mRNA_IDs = assay(MAE, 7))

MAE <- eNames(MAE = MAE, method = 'c', gene_IDs = metadata(MAE)[[3]])

MAE2 <- MultiAssayExperiment()
MAE2 <- dloadGmt(MAE = MAE2, species = "Mus musculus")

MAE2 <- enrichWiki(MAE = MAE2, method = 'c',
                   ID_list = metadata(MAE)[[4]],
                   orgDB = org.Mm.eg.db,
                   path_gene = assay(MAE2, 1),
                   path_name = assay(MAE2, 2),
                   ID = "ENTREZID",
                   universe = assay(MAE2, 1)[[2]])

savePlots(largeList = metadata(MAE2)[[1]],
          maxInt = 5,
          fileType = "jpeg")


MAE2 <- wikiList(MAE2, stringSpecies = 'Mus musculus', stringSymbol = 'L')

MAE2 <- wikiMatrix(MAE = MAE2, ID_list = metadata(MAE)[[4]],
                   wp_list = metadata(MAE2)[[2]])

MAE2 <- turnPercent(MAE = MAE2, wikiMatrix = assay(MAE2, 4))

MAE2 <- createClusters(MAE = MAE2, method = "c",
                       percentMatrix = assay(MAE2, 5),
                       noClusters = 4, variance = 0.99)

clusterCheck(Clusters = metadata(MAE2)[[3]], W = FALSE)

quickFuzz(Mfuzzdata = experiments(MAE2)[[7]], Clusters = metadata(MAE2)[[3]],
          W = FALSE, background = "white", subcol = "black",
          labelcol = "black", axiscol = "black", axisline = "black")

MAE2 <- returnCluster(MAE2, clusterData = assay(MAE2, 6),
                      whichCluster = 1, fitCluster = 0.4)

MAE2 <- diffExpressRes(MAE = MAE2, df = assay(MAE, 1), dataType = "Log2FC",
                       genes_ID = assay(MAE, 3), name = "miR_log2fc")

MAE2 <- diffExpressRes(MAE = MAE2, df = assay(MAE, 2), dataType = "Log2FC",
                       genes_ID = assay(MAE, 7), name = "mRNA_log2fc")

MAE2 <- reduceWiki(MAE = MAE2, path_data = assay(MAE2, 3),
                   stringWiki = 'Lung fibrosis')

MAE2 <- wikiMrna(MAE2, mRNA_express = assay(MAE2, 10),
                 singleWiki = assay(MAE2, 11),
                 stringWiki = 'Lung fibrosis')

MAE3 <- MultiAssayExperiment()

MAE3 <- mirMrnaInt(MAE = MAE3,
                   miR_express = assay(MAE2, 9),
                   GenesofInterest = assay(MAE2, 12),
                   maxInt = 5)

options(timeout=80)
MAE3 <- dloadTargetscan(MAE = MAE3, species="mmu")

MAE3 <- dloadMirdb(MAE = MAE3, species="mmu", orgDB = org.Mm.eg.db)

MAE3 <- dloadMirtarbase(MAE = MAE3, species="mmu")

save(miRTarBase, file="data/miRTarBase.rda", compress = "xz")

MAE3 <- dataMiningMatrix(MAE = MAE3, corrTable = assay(MAE3, 1),
                         targetscan = assay(MAE3, 2),
                         mirdb = assay(MAE3, 3),
                         mirtarbase = assay(MAE3, 4))

MAE3 <- matrixFilter(MAE = MAE3, miningMatrix = assay(MAE3, 5),
                     negativeOnly = TRUE,
                     predictedOnly = FALSE,
                     threshold = 2,
                     maxCor = -0.5)

MAE3 <- makeNet(MAE = MAE3, filt_df = assay(MAE3, 6))

quickNet(net = metadata(MAE3)[[1]])

quickPathwayTC(filt_df = assay(MAE3, 6), miRNA_exp = assay(MAE2, 9),
               mRNA_exp = assay(MAE2, 10), morethan = TRUE, threshold = 1,
               pathwayname = "Lung fibrosis")

quickDendro(filt_df = assay(MAE3, 6), miRNA_exp = assay(MAE2, 9),
            mRNA_exp = assay(MAE2, 10), pathwayname = "Lung fibrosis")

quickDMap(filt_df = assay(MAE3, 6), miRNA_exp = assay(MAE2, 9), mRNA_exp = assay(MAE2, 10), pathwayname = "Lung fibrosis")

quickHClust(filt_df = assay(MAE3, 6), miRNA_exp = assay(MAE2, 9),
            mRNA_exp = assay(MAE2, 10), pathwayname = "Lung fibrosis", k = 3,
            cluster = 1)

quickMap(filt_df = assay(MAE3, 6), numpairs = 11)

quickTC(filt_df = assay(MAE3, 6), miRNA_exp = assay(MAE2, 9),
        mRNA_exp = assay(MAE2, 10), pair = 1, scale = FALSE,
        Interpolation = TRUE, timecourse = 14)

quickCrossCorr(filt_df = assay(MAE3, 6), miRNA_exp = assay(MAE2, 9),
               mRNA_exp = assay(MAE2, 10), pair = 1, scale = FALSE,
               Interpolation = FALSE)


MAE3 <- multiReg(MAE = MAE3, gene_interest = "Igf1", mRNAreg = TRUE,
                 filt_df = assay(MAE3, 6), miRNA_exp = assay(MAE2, 9),
                 mRNA_exp = assay(MAE2, 10))


model1 <- linearRegr(mreg = assay(MAE3, 7), colpair = 3, alterpairs = c(4, 5))
summary(model1$regression)

model2 <- linearRegr(mreg = assay(MAE3, 7), colpair = 5)
summary(model2$regression)

quickTCPred(model = model1, reg_df = assay(MAE3, 7))

quickReg(reg_df = assay(MAE3, 7), colselect = 3)
quickReg(reg_df = assay(MAE3, 7), colselect = 6)

MAE3 <- makeMapp(MAE3,
                 filt_df = assay(MAE3, 6),
                 miR_IDs_adj = assay(MAE, 5),
                 dataType = 'L')

MAE3 <- makeDynamic(MAE = MAE3,
                    miR_expression = assay(MAE2, 9),
                    mRNA_expression = assay(MAE2, 10),
                    miR_IDs_adj = assay(MAE, 5),
                    dataType = 'L')

write.table(assay(MAE3, 8), "MAPP.txt", quote = FALSE,
            row.names = FALSE, col.names = FALSE,
            sep = "\t")

write.csv(assay(MAE3, 9), "Dynamics.csv", row.names = TRUE,
          quote = FALSE)
