% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/addIds.R
\name{addIds}
\alias{addIds}
\title{addIds}
\usage{
addIds(MAE, method, filtered_genelist, miR_IDs, mRNA_IDs)
}
\arguments{
\item{MAE}{MultiAssayExperiment to store the output of addIds.
It is recommended to use the MAE which stores results from
significantVals.}

\item{method}{Either "c" or "s", respectively for combined or separated
analysis.}

\item{filtered_genelist}{A list of nested dataframes if 'c' or a list of
lists with nested dataframes if 's'. This will be found as metadata within
the MAE object used in the significantVals function.}

\item{miR_IDs}{miR_ensembl or miR_entrez. Use a getIDsMir function to
acquire this. This will be stored as an assay in the MAE used in a getIdsMir
function.}

\item{mRNA_IDs}{mRNA_ensembl or mRNA_entrez. Use a getIDsMrna function to
acquire this. This will be stored as an assay in the MAE used in a getIdsMrna
function.}
}
\value{
List of dataframes with entrezIDs/ ensembl IDs and gene names
as columns which will be stored as metadata in the input MAE.
}
\description{
Adds entrez or ensembl IDs to the nested dataframes within a
list(c) or list of lists (s). The IDs are created by the getIdsMir and
getIdsMrna functions, both are needed for addIds.
}
\examples{
library(org.Mm.eg.db)

miR <- mm_miR

mRNA <- mm_mRNA

Data <- startObject(miR = miR, mRNA = mRNA)

Data <- getIdsMirMouse(Data, assay(Data, 1))

Data <- getIdsMrnaMouse(Data, assay(Data, 2), mirror = 'www')

Data <- combineGenes(MAE = Data, miR_data = assay(Data, 1),
                     mRNA_data = assay(Data, 2))

Data <- genesList(MAE = Data, method = 'c', genetic_data = assay(Data, 9),
                  timeString = 'D')

Data <- significantVals(MAE = Data, method = 'c',
                        geneList = metadata(Data)[[1]],
                        maxVal = 0.05, stringVal = "adjPVal")

Data <- addIds(MAE = Data, method = "c",
              filtered_genelist = metadata(Data)[[2]],
              miR_IDs = assay(Data, 3), mRNA_IDs = assay(Data, 7))
}
