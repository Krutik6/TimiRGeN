% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createClusters.R
\name{createClusters}
\alias{createClusters}
\title{createClusters}
\usage{
createClusters(MAE, method, percentMatrix, noClusters,
dataString = '', variance)
}
\arguments{
\item{MAE}{MultiAssayExperiment where the results from createClusters will be
stored. It is advised to use the MAE object which stores the output of
by turnPercent.}

\item{method}{Either "c" or "s" for combined or separate analysis.}

\item{percentMatrix}{A matrix containing wikipathway-data information. It
is output from the turnPercent function and will be stored as an assay
within the MAE used in the turnPercent function.}

\item{noClusters}{Number of clusters to create, the default is 5.}

\item{dataString}{Only for use in "s" analysis. Insert the prefix string e.g.
mRNA or miR. The string added should be the same prefix added using the
addPrefix function.}

\item{variance}{Numeric value from 0-1 to control strictness of filtering.
Higher variance means more pathways will be excluded from the analysis.}
}
\value{
Clusters(metadata): A list to be used as the input in checkClusters.
MfuzzData(ExperimentList): An ExpressionSet object to be input for
quickFuzz.
ClusterData(assay): A breakdown of how each pathway fitted with
each cluster and is the input for returnCluster.
}
\description{
Create soft clusters to assess change in gene abundance during
the time course in different wikipathways. createClusters will create
3 data files. Clusters which will be stored in the metadata,
MfuzzData which contains fuzzy clustering information will be stored
as an experiment and ClusterData which gives cluster-pathway fit information
which is stored as an assay. This function may take some time as it
downloads pathway information.
}
\examples{
MAE <- MultiAssayExperiment()

metadata(MAE)[["e_list"]] <- e_list

metadata(MAE)[["w_list"]] <- w_list_mouse[1:10]

MAE <- wikiMatrix(MAE, ID_list = metadata(MAE)[[1]],
                  wp_list = metadata(MAE)[[2]])

MAE <- turnPercent(MAE = MAE,
                   wikiMatrix = assay(MAE, 1),
                   rowInt = 6)

MAE <- createClusters(MAE, method = "c",
                    percentMatrix = assay(MAE, 2),
                    noClusters = 2, variance = 0.99)
}
