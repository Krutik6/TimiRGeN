% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genesList.R
\name{genesList}
\alias{genesList}
\title{genesList}
\usage{
genesList(MAE, method, genetic_data, timeString, miR_data, mRNA_data)
}
\arguments{
\item{MAE}{Multi Assay Experiment object.}

\item{method}{Respectively either 'c' or 's' for combined or separated
analysis.}

\item{genetic_data}{If 'c', this should be a dataframe with miR and mRNA
information together.}

\item{timeString}{If 'c', this should be a commmon string representing
'timepoint' e.g. for H.1, H.10, H.20, timeString = 'H'.}

\item{miR_data}{If 's', a dataframe of microRNA data. Rownames are genes
and colnames are like so; genetype_timepoint.resulttype.
timepoint.resulttype should be the same in mRNA and miR data.}

\item{mRNA_data}{If 's', a dataframe of mRNA data. Rownames are genes
and colnames are like so; genetype_timepoint.resulttype.
timepoint.resulttype should be the same in mRNA and miR data.}
}
\value{
A list of dataframes separated by features in the column names which
can be stored in the metadata area of an MAE object.
}
\description{
Will produce a list of nested dataframes. For combined
analysis method = c, and for separated analysis method = s. Combined
analysis colnames should be as follows 'timepoint.resultstype'.
genesList will make new dataframes separated by 'timepoint.'.
Separated colnames should be as follows 'genetype_timepoint.resulttype'.
genesList will make separate lists for 'genetype_'. Each of these lists
will have dataframes which have been made by separating by 'timepoint.'.
Make sure to follow colname nomenclature carefully.
}
\examples{
library(MultiAssayExperiment)
miR <- mm_miR
mRNA <- mm_mRNA

MAE <- startObject(miR = miR, mRNA = mRNA)

MAE <- addPrefix(MAE = MAE, gene_df = assay(MAE, 1),
                 prefixString = "miR")

MAE <- addPrefix(MAE = MAE, gene_df = assay(MAE, 2),
                 prefixString = "mRNA")

MAE <- genesList(MAE, method = "s", miR_data = assay(MAE, 3),
                 mRNA_data = assay(MAE, 4))

MAE <- combineGenes(MAE, miR_data = assay(MAE, 1),
                    mRNA_data = assay(MAE, 2))

MAE <- genesList(MAE, method = 'c', genetic_data = assay(MAE, 5),
                 timeString = 'D')
}
