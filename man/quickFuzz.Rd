% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quickFuzz.R
\name{quickFuzz}
\alias{quickFuzz}
\title{quickFuzz}
\usage{
quickFuzz(Mfuzzdata, Clusters, W)
}
\arguments{
\item{Mfuzzdata}{A large ExpressionSet object which contain fuzzy clustering
data. This is output from the createClusters function. The Expressionset
object should be stored as an experiment in the MAE used in the
createClusters function.}

\item{Clusters}{A large list containing fuzzy clustering data. This is
output from the createClusters function. The list of should be stored as
metadata in the MAE used in the createClusters function.}

\item{W}{Should the plot be shown in a new window? Default is TRUE.}
}
\value{
A plot of different clusters showing how the input data varies
across different wikipathways.
}
\description{
Plots fuzzy clusters in reference to the ClusterData dataframe.
Each different cluster created will represent a different temporal
behaviour. Depending on the data, more or fewer cluster may be appropriate.
Use clusterCheck to influence this decision before moving onto quickFuzz.
Each line in a plot represents a pathway. Pathways are divided by colour,
the more intense the colour, the higher the fit a pathway has to a particular
cluster and temporal behaviour.
Fuzzy clustering is a soft clustering approach where objects are not
divided into fixed classes. Each pathway can exist in each cluster but
each pathway will fit to different degrees to each cluster. Look into
the clusterData dataframe created by createClusters to see this.
If a cluster peaks interest, continue this analysis with returnCluster.
}
\examples{
MAE <- MultiAssayExperiment()

metadata(MAE)[["e_list"]] <- e_list_mouse

metadata(MAE)[["w_list"]] <- w_list_mouse[1:10]

MAE <- wikiMatrix(MAE, ID_list = metadata(MAE)[[1]],
                  wp_list = metadata(MAE)[[2]])

MAE <- turnPercent(MAE = MAE,
                   wikiMatrix = assay(MAE, 1),
                   rowInt = 6)

MAE <- createClusters(MAE, method = "c",
                      percentMatrix = assay(MAE, 2),
                      noClusters = 2, variance = 0.99)

quickFuzz(Mfuzzdata = experiments(MAE)[[4]],
          Clusters = metadata(MAE)[[3]], W = FALSE)
}
